require 'fileutils'

Puppet::Type.type(:aptsourced).provide(:aptsourced) do
    include Puppet::Util::Checksums

    desc "apt-source provider - manages single line repo .list files"

    def create
        File.open(sourcefile, 'w') do | file |
            file.puts header
            file.puts sourceline
	end
    end

    def destroy
        File.unlink sourcefile
    end

    def exists?
        if ! File.file?( sourcefile )
            File.new(sourcefile, "w")
            return false
        elsif compare
            return false
        end

        return false
    end

    #################################################
    # util functions
    #################################################

    def sourcefile
        listdir = '/etc/apt/sources.list.d/'
        fileext = '.list'

        listdir + resource[:sourcename] + fileext
    end

    # merge these two funcs?
    def sourceline
        "#{resource[:repotype]} #{resource[:uri]} #{resource[:distribution]} #{resource[:components]}"
    end

    def header
        "# HEADER: This file was autogenerated by puppet."
    end

    def compare
        # compare the in memory contents vs the on disk ones

        filechksum   = md5_file( sourcefile )
        memorychksum = md5( "#{sourceline}\n#{header}\n" )

        filechksum == memorychksum
    end

end
